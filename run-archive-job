#!/bin/bash

SNAPSHOT_FILE="$HOME/.archive-system-tar-incremental-snapshot"
SNAPSHOT_TEMP_FILE="${SNAPSHOT_FILE}-new"
LOCK_FILE="$HOME/.archive-system-lock"
VAULT="archive-system"

ARCHIVE_PATHS=(
	"$HOME/src"
	"$HOME/bin"
	"$HOME/documents"
	"$HOME/random"
)

START_TIME="`date +%s`"

[ -n "$HOSTNAME" ] || HOSTNAME="`hostname`"

if ! which glacier-cli >/dev/null 2>&1; then
	PATH="${PATH}:$HOME/bin"
fi

die() {
	code="$1"
	shift
	echo "$@"
	echo "Exiting: $code"
	exit "$code"
}

echo "Process $$ starting at $START_TIME"

SNAPSHOT_MTIME="`stat -c '%Y' "$SNAPSHOT_FILE"`"
MIN_TIME_SINCE_LAST_RUN="$((60*60*23))"
if [ ! -n "$IGNORE_LAST_RUN_TIME" ] && [ $((START_TIME - SNAPSHOT_MTIME)) -lt "$MIN_TIME_SINCE_LAST_RUN" ]; then
	die 2 "Refusing to run archiver $((START_TIME - SNAPSHOT_MTIME)) < $MIN_TIME_SINCE_LAST_RUN seconds after last run.
Run again with IGNORE_LAST_RUN_TIME=true to run anyway."
fi

# The first of every month, we do a non-incremental backup so we never need to restore too many files
MIN_TIME_SINCE_LAST_FULL="$(60*60*24*7)" # for safety
if [ ! -n "$NO_FIRSTRUN" ] && [ "$(date +%-d)" -eq "1" ] && [ "$((START_TIME - SNAPSHOT_MTIME))" -gt "$MIN_TIME_SINCE_LAST_FULL" ]; then
	echo "First of month, doing non-incremental run"
	FIRSTRUN="true"
fi

echo "Running \"$0 $@\" @$START_TIME for host $HOSTNAME into vault $VAULT"
echo "Using snapshot file: $SNAPSHOT_FILE"
echo "Archiving paths:"
for path in "${ARCHIVE_PATHS[@]}"; do
	echo -e "\t$path"
done

echo "Acquiring file lock on $LOCK_FILE"
exec 42>> "$LOCK_FILE"
flock -nx 42 || die 2 "Failed to get file lock - already running?"
echo "Lock acquired"

if [ -e "$SNAPSHOT_TEMP_FILE" ]; then
	echo "Warning: $SNAPSHOT_TEMP_FILE already exists"
	[ -f "$SNAPSHOT_TEMP_FILE" ] || die 1 "Existing snapshot temp file is not a regular file"
fi

if [ -n "$FIRSTRUN" ]; then
	echo "FIRST RUN: Skipping copy of snapshot file"
else
	echo "Creating temporary snapshot file"
	cp "$SNAPSHOT_FILE" "$SNAPSHOT_TEMP_FILE" || die 1 "Failed to create snapshot temp file"
fi

NAME_EXTRA=
[ -n "$FIRSTRUN" ] && NAME_EXTRA="-base"
ARCHIVE_NAME="${HOSTNAME}-${START_TIME}${NAME_EXTRA}.tar.gz"
echo "Performing upload of archive $ARCHIVE_NAME"
tar czg "$SNAPSHOT_TEMP_FILE" "${ARCHIVE_PATHS[@]}" | glacier-cli archive upload "$VAULT" --name="$ARCHIVE_NAME" - ||
	die 1 "Upload failed."
echo "Upload finished."

mv "$SNAPSHOT_TEMP_FILE" "$SNAPSHOT_FILE" || die "Snapshot move failed"

echo "Archive run complete."
